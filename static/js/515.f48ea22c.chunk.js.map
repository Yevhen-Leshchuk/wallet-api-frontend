{"version":3,"file":"static/js/515.f48ea22c.chunk.js","mappings":"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","sources":["webpack://wallet-api-frontend/./src/common/elements/Balance/Balance.module.scss?53d9","common/elements/Balance/Balance.jsx","webpack://wallet-api-frontend/./src/common/elements/Brief/Brief.module.scss?0582","common/elements/Brief/Brief.jsx","webpack://wallet-api-frontend/./src/common/elements/Calendar/Calendar.module.scss?8fbd","common/elements/Calendar/Calendar.jsx","webpack://wallet-api-frontend/./src/common/elements/GoBackLink/GoBackLink.module.scss?bded","common/elements/GoBackLink/GoBackLink.jsx","webpack://wallet-api-frontend/./src/common/elements/LinkToReport/LinkToReport.module.scss?af80","common/elements/LinkToReport/LinkToReport.jsx","webpack://wallet-api-frontend/./src/common/elements/NavTransaction/NavTransaction.module.scss?0381","common/elements/NavTransaction/NavTransaction.jsx","webpack://wallet-api-frontend/./src/common/elements/Tooltip/Tooltip.module.scss?a2ce","common/elements/Tooltip/Tooltip.jsx","webpack://wallet-api-frontend/./src/components/ProductForm/ProductForm.module.scss?0e8f","components/ProductForm/ProductForm.jsx","webpack://wallet-api-frontend/./src/components/TransactionList/TransactionList.module.scss?7c0f","components/TransactionList/ExpensesList.jsx","components/TransactionList/IncomesList.jsx","webpack://wallet-api-frontend/./src/components/TransactionListItem/TransactionListItem.module.scss?5c93","components/TransactionListItem/ExpensesListItem.jsx","components/TransactionListItem/IncomesListItem.jsx","redux/date/date-selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"Balance_visually-hidden__r6JfX\",\"container\":\"Balance_container__UiCtf\",\"balanceBox\":\"Balance_balanceBox__1cVha\",\"balanceForm\":\"Balance_balanceForm__7SyeC\",\"balanceTitle\":\"Balance_balanceTitle__V+xg3\",\"balanceFormInput\":\"Balance_balanceFormInput__Kl4Qe\",\"balanceFormBtn\":\"Balance_balanceFormBtn__gY8X9\"};","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState, useRef } from 'react';\nimport { authSelectors, authOperations } from 'redux/auth';\nimport s from './Balance.module.scss';\n\nconst Balance = ({ inputStyle, btnStyle, balanceBoxStyle }) => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(null);\n  let balance = useSelector(authSelectors.getBalance);\n\n  const inputValue = useRef();\n\n  useEffect(() => {\n    dispatch(authOperations.getUser());\n\n    setValue(\n      (inputValue.current =\n        parseFloat(\n          balance && typeof balance === 'number' ? balance : 0\n        ).toFixed(2) + ' €')\n    );\n  }, [dispatch, balance, value]);\n\n  const setBalance = e => {\n    e.preventDefault();\n    const newBalance = e.target.balance.value.split(' ')[0];\n    dispatch(authOperations.updateUserBalance(newBalance));\n  };\n\n  return (\n    <div className={s.balanceBox} style={balanceBoxStyle}>\n      <h2 className={s.balanceTitle}>Баланс:</h2>\n      <form className={s.balanceForm} onSubmit={setBalance}>\n        <input\n          className={s.balanceFormInput}\n          style={inputStyle}\n          name=\"balance\"\n          type=\"text\"\n          placeholder=\"00.00 €\"\n          autoComplete=\"off\"\n          defaultValue={value}\n        />\n        <button className={s.balanceFormBtn} style={btnStyle} type=\"submit\">\n          Подтвердить\n        </button>\n      </form>\n    </div>\n  );\n};\n\nBalance.propTypes = {\n  inputStyle: PropTypes.object,\n  btnStyle: PropTypes.object,\n  balanceBoxStyle: PropTypes.object,\n};\n\nexport default Balance;\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"Brief_visually-hidden__F4U5-\",\"container\":\"Brief_container__IVNEx\",\"briefBox\":\"Brief_briefBox__lbhlQ\",\"briefList\":\"Brief_briefList__basJR\",\"briefListItem\":\"Brief_briefListItem__-u5T2\",\"briefListItemHeader\":\"Brief_briefListItemHeader__joJaL\",\"briefListItemText\":\"Brief_briefListItemText__zJ+pR\",\"briefListItemCount\":\"Brief_briefListItemCount__23w7I Brief_briefListItemText__zJ+pR\"};","import PropTypes from 'prop-types';\nimport s from './Brief.module.scss';\n\nconst Brief = ({ briefList }) => {\n  return (\n    <div className={s.briefBox}>\n      <h2 className={s.briefListItemHeader}>Сводка</h2>\n      <ul className={s.briefList}>\n        {briefList &&\n          Object.entries(briefList)\n            .filter(([key, value]) => value !== 'N/A')\n            .map(([key, value]) => (\n              <li className={s.briefListItem} key={key}>\n                <p className={s.briefListItemText}>{key}</p>\n                <p className={s.briefListItemCount}>{value}</p>\n              </li>\n            ))}\n      </ul>\n    </div>\n  );\n};\n\nBrief.propTypes = {\n  briefList: PropTypes.object,\n};\n\nexport default Brief;\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"Calendar_visually-hidden__m+7gt\",\"container\":\"Calendar_container__PPxP3\",\"calendarBox\":\"Calendar_calendarBox__pgVLj\",\"calendarIconBox\":\"Calendar_calendarIconBox__MEiQm\",\"calendarIcon\":\"Calendar_calendarIcon__x9fBP\",\"datePicker\":\"Calendar_datePicker__wGnEc\"};","import { useSelector, useDispatch } from 'react-redux';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { dateSelectors } from 'redux/date';\nimport { selectedDate } from 'redux/date';\nimport sprite from '../../../images/svg/sprite.svg';\nimport s from './Calendar.module.scss';\n\nconst Calendar = () => {\n  const dispatch = useDispatch();\n\n  const date = useSelector(dateSelectors.getSelectedDate);\n\n  const handleChangeDate = date => {\n    dispatch(\n      selectedDate(\n        date.toISOString().slice(0, 10).split('.').reverse().join('-')\n      )\n    );\n  };\n\n  return (\n    <div className={s.calendarBox}>\n      <div className={s.calendarIconBox}>\n        <svg className={s.calendarIcon}>\n          <use xlinkHref={`${sprite}#calendar`} />\n        </svg>\n      </div>\n      <DatePicker\n        className={s.datePicker}\n        selected={\n          date ? new Date(date.split('.').reverse().join('-')) : new Date()\n        }\n        dateFormat=\"yyyy-MM-dd\"\n        onChange={handleChangeDate}\n      />\n    </div>\n  );\n};\n\nexport default Calendar;\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"GoBackLink_visually-hidden__GbiIr\",\"container\":\"GoBackLink_container__YrnxQ\",\"goBackLinkBox\":\"GoBackLink_goBackLinkBox__z4Li8\",\"goBackLink\":\"GoBackLink_goBackLink__jwQ3e\",\"goBackLinkIcon\":\"GoBackLink_goBackLinkIcon__FLkMM\",\"goBackText\":\"GoBackLink_goBackText__ViifB\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport useMediaQuery from 'common/hooks/mediaRulesHook';\nimport sprite from '../../../images/svg/sprite.svg';\nimport s from './GoBackLink.module.scss';\n\nconst GoBackLink = ({ redirectTo = '/', alt = 'mobilePage' }) => {\n  const tabletMediaQuery = useMediaQuery('(min-width: 768px)');\n\n  return (\n    <div className={s.goBackLinkBox}>\n      <Link to={redirectTo} alt={alt} className={s.goBackLink}>\n        <svg className={s.goBackLinkIcon}>\n          <use xlinkHref={`${sprite}#backspace`} />\n        </svg>\n        {tabletMediaQuery && (\n          <p className={s.goBackText}>Вернуться на главную</p>\n        )}\n      </Link>\n    </div>\n  );\n};\n\nGoBackLink.propTypes = {\n  redirectTo: PropTypes.string,\n  alt: PropTypes.string,\n};\n\nexport default GoBackLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"LinkToReport_visually-hidden__F6fmj\",\"container\":\"LinkToReport_container__7LWff\",\"reportLinkBox\":\"LinkToReport_reportLinkBox__9o+S8\",\"reportLink\":\"LinkToReport_reportLink__0mhHV\",\"reportLinkIconBox\":\"LinkToReport_reportLinkIconBox__57nQ8\",\"reportLinkText\":\"LinkToReport_reportLinkText__nn4bq\",\"reportLinkIcon\":\"LinkToReport_reportLinkIcon__W65LD\"};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport sprite from '../../../images/svg/sprite.svg';\nimport s from './LinkToReport.module.scss';\n\nconst LinkToReport = ({ redirectTo = '/report/expenses' }) => {\n  return (\n    <div className={s.reportLinkBox}>\n      <Link to={redirectTo} alt=\"reportPage\" className={s.reportLink}>\n        <p className={s.reportLinkText}>Перейти к отчетам</p>\n        <div className={s.reportLinkIconBox}>\n          <svg className={s.reportLinkIcon}>\n            <use xlinkHref={`${sprite}#chart`} />\n          </svg>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nLinkToReport.propTypes = {\n  redirectTo: PropTypes.string,\n};\n\nexport default LinkToReport;\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"NavTransaction_visually-hidden__Utrnu\",\"container\":\"NavTransaction_container__stkl0\",\"navTransactionBox\":\"NavTransaction_navTransactionBox__ZqomF\",\"navTransactionLink\":\"NavTransaction_navTransactionLink__0Y+Uj\",\"activeLink\":\"NavTransaction_activeLink__F2UPc NavTransaction_navTransactionLink__0Y+Uj\",\"navTransactionLinkIncomes\":\"NavTransaction_navTransactionLinkIncomes__DzY6I NavTransaction_navTransactionLink__0Y+Uj\"};","import { NavLink } from 'react-router-dom';\nimport s from './NavTransaction.module.scss';\n\nconst NavTransaction = () => {\n  return (\n    <div className={s.navTransactionBox}>\n      <NavLink\n        to=\"/expenses\"\n        alt=\"expensesPage\"\n        className={({ isActive }) =>\n          isActive ? `${s.activeLink}` : `${s.navTransactionLink}`\n        }\n      >\n        Расход\n      </NavLink>\n\n      <NavLink\n        to=\"/incomes\"\n        alt=\"incomesPage\"\n        className={({ isActive }) =>\n          isActive ? `${s.activeLink}` : `${s.navTransactionLinkIncomes}`\n        }\n      >\n        Доход\n      </NavLink>\n    </div>\n  );\n};\n\nexport default NavTransaction;\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"Tooltip_visually-hidden__LaQJq\",\"container\":\"Tooltip_container__enwYb\",\"tooltipBox\":\"Tooltip_tooltipBox__hfzWn\",\"tooltipText\":\"Tooltip_tooltipText__MkdeG\",\"tooltipTextComment\":\"Tooltip_tooltipTextComment__8Wztc\"};","import PropTypes from 'prop-types';\nimport s from './Tooltip.module.scss';\n\nconst Tooltip = ({ style }) => {\n  return (\n    <div id=\"overlay\" className={s.tooltipBox} style={style}>\n      <p className={s.tooltipText}>\n        Привет! Для начала работы внеси текущий баланс своего счета!\n      </p>\n      <p className={s.tooltipTextComment}>\n        Ты не можешь тратить деньги пока их y тебя нет :)\n      </p>\n    </div>\n  );\n};\n\nTooltip.propTypes = {\n  style: PropTypes.object,\n};\n\nexport default Tooltip;\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"ProductForm_visually-hidden__c4uCA\",\"container\":\"ProductForm_container__2RFTj\",\"productFormBox\":\"ProductForm_productFormBox__Hp69g\",\"productForm\":\"ProductForm_productForm__I4o6x\",\"productFormDescInput\":\"ProductForm_productFormDescInput__Ca7jV\",\"productFormCategoryLabel\":\"ProductForm_productFormCategoryLabel__rSG1c\",\"productFormCategoryInput\":\"ProductForm_productFormCategoryInput__X9yXG ProductForm_productFormDescInput__Ca7jV\",\"arrowDownIconBox\":\"ProductForm_arrowDownIconBox__DwLCt\",\"arrowDownIcon\":\"ProductForm_arrowDownIcon__gLi3X\",\"arrowUpIconBox\":\"ProductForm_arrowUpIconBox__Itr6x ProductForm_arrowDownIconBox__DwLCt\",\"arrowUpIcon\":\"ProductForm_arrowUpIcon__htakN ProductForm_arrowDownIcon__gLi3X\",\"calculatorIconBox\":\"ProductForm_calculatorIconBox__d98ZO\",\"calculatorIcon\":\"ProductForm_calculatorIcon__WSMWZ\",\"productFormListBox\":\"ProductForm_productFormListBox__jQb9F\",\"productFormListItem\":\"ProductForm_productFormListItem__lYvI6\",\"productAmountBox\":\"ProductForm_productAmountBox__ID0Hc\",\"productAmountInput\":\"ProductForm_productAmountInput__PO671\",\"buttonInputBox\":\"ProductForm_buttonInputBox__gq2nw\",\"buttonInput\":\"ProductForm_buttonInput__BlIa0\",\"buttonClear\":\"ProductForm_buttonClear__rbeIg ProductForm_buttonInput__BlIa0\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport GoBackLink from 'common/elements/GoBackLink';\nimport Calendar from 'common/elements/Calendar';\nimport sprite from '../../images/svg/sprite.svg';\nimport useMediaQuery from 'common/hooks/mediaRulesHook';\nimport { dateSelectors } from 'redux/date';\nimport { transactionOperations } from 'redux/transaction';\nimport { authSelectors } from 'redux/auth';\nimport { errorMessage } from 'common/notifications/notification';\nimport s from './ProductForm.module.scss';\n\nconst ProductForm = ({ incomesCategories, expenseCategories }) => {\n  const mobileMediaQuery = useMediaQuery('(max-width: 767px)');\n  const tabletMediaQuery = useMediaQuery('(min-width: 768px)');\n  const dispatch = useDispatch();\n  const date = useSelector(dateSelectors.getSelectedDate);\n  const balance = useSelector(authSelectors.getBalance);\n  const location = useLocation();\n  const activeLocation = location.pathname;\n\n  const [showCategory, setShowCategory] = useState(false);\n  const [categoryItem, setCategoryItem] = useState('');\n\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState('');\n\n  const handleShowCategory = () => {\n    setShowCategory(!showCategory);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'description':\n        setDescription(value);\n        break;\n      case 'category':\n        break;\n      case 'amount':\n        setAmount(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleCategoryItem = event => {\n    event.preventDefault();\n\n    setCategoryItem(event.target.innerText);\n    setShowCategory(!showCategory);\n  };\n\n  const formHandler = event => {\n    event.preventDefault();\n    const formRef = event.target;\n    const formData = new FormData(formRef);\n    const formValues = {};\n\n    formData.forEach((value, key) => {\n      formValues[key] = value;\n    });\n\n    const submittedformData = {\n      ...formValues,\n      date: date,\n    };\n\n    const amount = Number(submittedformData.amount);\n\n    if (activeLocation === '/expenses') {\n      if (amount > balance) {\n        errorMessage('Транзакция превышает сумму на вашем счету!');\n        return;\n      }\n      dispatch(transactionOperations.addExpense(submittedformData));\n      dispatch(transactionOperations.getExpensesData());\n    } else if (activeLocation === '/incomes') {\n      dispatch(transactionOperations.addIncome(submittedformData));\n      dispatch(transactionOperations.getIncomesData());\n    }\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setDescription('');\n    setCategoryItem('');\n    setAmount('');\n  };\n\n  return (\n    <>\n      {mobileMediaQuery && <GoBackLink redirectTo=\"/mobile\" />}\n\n      <div className={s.productFormBox}>\n        {tabletMediaQuery && <Calendar />}\n        <form className={s.productForm} onSubmit={formHandler}>\n          <input\n            placeholder=\"Описание товара\"\n            type=\"text\"\n            name=\"description\"\n            className={s.productFormDescInput}\n            autoComplete=\"off\"\n            autoFocus\n            value={description}\n            onChange={handleChange}\n            required\n          />\n          <label className={s.productFormCategoryLabel}>\n            <input\n              placeholder=\"Категория товара\"\n              type=\"text\"\n              name=\"category\"\n              className={s.productFormCategoryInput}\n              autoComplete=\"off\"\n              autoFocus\n              value={categoryItem}\n              onChange={handleChange}\n              required\n            />\n            {!showCategory ? (\n              <button\n                type=\"button\"\n                className={s.arrowDownIconBox}\n                onClick={handleShowCategory}\n              >\n                <svg className={s.arrowDownIcon}>\n                  <use xlinkHref={`${sprite}#arrow-down`} />\n                </svg>\n              </button>\n            ) : (\n              <>\n                <button\n                  type=\"button\"\n                  className={s.arrowUpIconBox}\n                  onClick={handleShowCategory}\n                >\n                  <svg className={s.arrowUpIcon}>\n                    <use xlinkHref={`${sprite}#arrow-up`} />\n                  </svg>\n                </button>\n                <ul className={s.productFormListBox} id=\"categories\">\n                  {incomesCategories &&\n                    incomesCategories.map(categorie => (\n                      <li\n                        key={categorie}\n                        className={s.productFormListItem}\n                        onClick={handleCategoryItem}\n                      >\n                        {categorie}\n                      </li>\n                    ))}\n                  {expenseCategories &&\n                    expenseCategories.map(categorie => (\n                      <li\n                        key={categorie}\n                        className={s.productFormListItem}\n                        onClick={handleCategoryItem}\n                      >\n                        {categorie}\n                      </li>\n                    ))}\n                </ul>\n              </>\n            )}\n          </label>\n\n          <div className={s.productAmountBox}>\n            <input\n              className={s.productAmountInput}\n              placeholder=\"00.00 €\"\n              type=\"number\"\n              name=\"amount\"\n              value={amount}\n              onChange={handleChange}\n              required\n              autoComplete=\"off\"\n            />\n            <div className={s.calculatorIconBox}>\n              <svg className={s.calculatorIcon}>\n                <use xlinkHref={`${sprite}#calculator`} />\n              </svg>\n            </div>\n          </div>\n\n          <div className={s.buttonInputBox}>\n            <button type=\"submit\" className={s.buttonInput}>\n              Ввод\n            </button>\n            <button type=\"button\" className={s.buttonClear} onClick={resetForm}>\n              Очистить\n            </button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nProductForm.propTypes = {\n  incomesCategories: PropTypes.array,\n  expenseCategories: PropTypes.array,\n};\n\nexport default ProductForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"TransactionList_visually-hidden__FKuhc\",\"container\":\"TransactionList_container__ZPjy9\",\"expListBox\":\"TransactionList_expListBox__ANAMO\",\"incListBox\":\"TransactionList_incListBox__izHv6\",\"expListHeader\":\"TransactionList_expListHeader__RWuLX\",\"incListHeader\":\"TransactionList_incListHeader__ORY+g\",\"expListHeaderItem\":\"TransactionList_expListHeaderItem__7pMwy\",\"incListHeaderItem\":\"TransactionList_incListHeaderItem__IpRw8\",\"expListItemBox\":\"TransactionList_expListItemBox__QxKH+\",\"incListItemBox\":\"TransactionList_incListItemBox__2ohCt\",\"enter\":\"TransactionList_enter__VEHzI\",\"enterActive\":\"TransactionList_enterActive__0TRVx\",\"exit\":\"TransactionList_exit__xYEhv\",\"exitActive\":\"TransactionList_exitActive__-8AsS\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { transactionOperations, transactionSelectors } from 'redux/transaction';\nimport { ExpensesListItem } from 'components/TransactionListItem';\nimport useMediaQuery from 'common/hooks/mediaRulesHook';\nimport s from './TransactionList.module.scss';\n\nconst ExpensesList = () => {\n  const tabletMediaQuery = useMediaQuery('(min-width: 768px)');\n  const dispatch = useDispatch();\n  const expensesList = useSelector(transactionSelectors.getExpensesData);\n  const reverseExpenses = expensesList?.map(expense => expense).reverse();\n\n  const isAddExpenseItem = useSelector(\n    transactionSelectors.getIsAddExpenseItem\n  );\n  const isDeleteExpenseItem = useSelector(\n    transactionSelectors.getIsDeleteExpenseItem\n  );\n\n  useEffect(() => {\n    dispatch(transactionOperations.getExpensesData());\n  }, [dispatch, isAddExpenseItem, isDeleteExpenseItem]);\n\n  return (\n    <>\n      {tabletMediaQuery && (\n        <>\n          <ul className={s.expListHeader}>\n            <li className={s.expListHeaderItem} key={'Дата'}>\n              Дата\n            </li>\n            <li className={s.expListHeaderItem} key={'Описание'}>\n              Описание\n            </li>\n            <li className={s.expListHeaderItem} key={'Категория'}>\n              Категория\n            </li>\n            <li className={s.expListHeaderItem} key={'Сумма'}>\n              Сумма\n            </li>\n          </ul>\n          <div className={s.expListBox}>\n            <TransitionGroup component=\"ul\" className={s.expListItemBox}>\n              {reverseExpenses &&\n                reverseExpenses.map(expense => (\n                  <CSSTransition key={expense._id} timeout={500} classNames={s}>\n                    <ExpensesListItem id={expense._id} {...expense} />\n                  </CSSTransition>\n                ))}\n            </TransitionGroup>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ExpensesList;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { transactionOperations, transactionSelectors } from 'redux/transaction';\nimport { IncomesListItem } from 'components/TransactionListItem';\nimport useMediaQuery from 'common/hooks/mediaRulesHook';\nimport s from './TransactionList.module.scss';\n\nconst IncomesList = () => {\n  const tabletMediaQuery = useMediaQuery('(min-width: 768px)');\n  const dispatch = useDispatch();\n  const incomesList = useSelector(transactionSelectors.getIncomesData);\n  const reverseIncomes = incomesList?.map(income => income).reverse();\n\n  const isAddIncomeItem = useSelector(transactionSelectors.getIsAddIncomeItem);\n  const isDeleteIncomeItem = useSelector(\n    transactionSelectors.getIsDeleteIncomeItem\n  );\n\n  useEffect(() => {\n    dispatch(transactionOperations.getIncomesData());\n  }, [dispatch, isAddIncomeItem, isDeleteIncomeItem]);\n\n  return (\n    <>\n      {tabletMediaQuery && (\n        <>\n          <ul className={s.incListHeader}>\n            <li className={s.incListHeaderItem} key={'Дата'}>\n              Дата\n            </li>\n            <li className={s.incListHeaderItem} key={'Описание'}>\n              Описание\n            </li>\n            <li className={s.incListHeaderItem} key={'Категория'}>\n              Категория\n            </li>\n            <li className={s.incListHeaderItem} key={'Сумма'}>\n              Сумма\n            </li>\n          </ul>\n          <div className={s.incListBox}>\n            <TransitionGroup component=\"ul\" className={s.incListItemBox}>\n              {reverseIncomes &&\n                reverseIncomes.map(income => (\n                  <CSSTransition key={income._id} timeout={500} classNames={s}>\n                    <IncomesListItem id={income._id} {...income} />\n                  </CSSTransition>\n                ))}\n            </TransitionGroup>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default IncomesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"TransactionListItem_visually-hidden__ke3h0\",\"container\":\"TransactionListItem_container__cVZ8z\",\"expListItem\":\"TransactionListItem_expListItem__SZjwK\",\"incListItem\":\"TransactionListItem_incListItem__lZv7q\",\"expListItemBox\":\"TransactionListItem_expListItemBox__+S9ub\",\"incListItemBox\":\"TransactionListItem_incListItemBox__fOL6e\",\"expListItemDesc\":\"TransactionListItem_expListItemDesc__oB+o3\",\"incListItemDesc\":\"TransactionListItem_incListItemDesc__adm5s\",\"expListItemDate\":\"TransactionListItem_expListItemDate__WRZz2\",\"incListItemDate\":\"TransactionListItem_incListItemDate__hMkj9\",\"expListItemCategory\":\"TransactionListItem_expListItemCategory__+1hcY\",\"incListItemCategory\":\"TransactionListItem_incListItemCategory__R50Bt\",\"expListItemPrice\":\"TransactionListItem_expListItemPrice__MJZQE\",\"incListItemPrice\":\"TransactionListItem_incListItemPrice__ytckA TransactionListItem_expListItemPrice__MJZQE\",\"expListItemBtnBox\":\"TransactionListItem_expListItemBtnBox__P7AGO\",\"incListItemBtnBox\":\"TransactionListItem_incListItemBtnBox__Kioku\",\"expListItemBtn\":\"TransactionListItem_expListItemBtn__u3Zn1\",\"incListItemBtn\":\"TransactionListItem_incListItemBtn__8-vuT\",\"expListItemIcon\":\"TransactionListItem_expListItemIcon__P2Lgb\",\"incListItemIcon\":\"TransactionListItem_incListItemIcon__75ciQ\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { transactionOperations } from 'redux/transaction';\nimport Modal from 'common/elements/Modal';\nimport sprite from '../../images/svg/sprite.svg';\nimport s from './TransactionListItem.module.scss';\n\nconst ExpensesListItem = ({ description, category, amount, date, _id }) => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const onClick = () => {\n    dispatch(transactionOperations.deleteExpenseItem(_id));\n    dispatch(transactionOperations.getExpensesData());\n  };\n\n  return (\n    <>\n      <li className={s.expListItem} key={_id}>\n        <ul className={s.expListItemBox}>\n          <li className={s.expListItemDesc} key={description}>\n            {description}\n          </li>\n          <li className={s.expListItemDate} key={date}>\n            {date}\n          </li>\n          <li className={s.expListItemCategory} key={category}>\n            {category}\n          </li>\n          <li className={s.expListItemPrice} key={amount}>\n            {`- ${amount}`}\n          </li>\n          <div className={s.expListItemBtnBox}>\n            <button\n              type=\"submit\"\n              className={s.expListItemBtn}\n              onClick={toggleModal}\n            >\n              <svg className={s.expListItemIcon}>\n                <use xlinkHref={`${sprite}#delete`} />\n              </svg>\n            </button>\n          </div>\n        </ul>\n      </li>\n      {showModal && (\n        <Modal onClose={toggleModal} onClick={onClick} text=\"Вы уверены?\" />\n      )}\n    </>\n  );\n};\n\nExpensesListItem.propTypes = {\n  description: PropTypes.string,\n  category: PropTypes.string,\n  amount: PropTypes.number,\n  date: PropTypes.string,\n  _id: PropTypes.string,\n};\n\nexport default ExpensesListItem;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { transactionOperations } from 'redux/transaction';\nimport Modal from 'common/elements/Modal';\nimport sprite from '../../images/svg/sprite.svg';\nimport s from './TransactionListItem.module.scss';\n\nconst IncomesListItem = ({ description, category, amount, date, _id }) => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const onClick = () => {\n    dispatch(transactionOperations.deleteIncomeItem(_id));\n    dispatch(transactionOperations.getIncomesData());\n  };\n\n  return (\n    <>\n      <li className={s.incListItem} key={_id}>\n        <ul className={s.incListItemBox}>\n          <li className={s.incListItemDesc} key={description}>\n            {description}\n          </li>\n          <li className={s.incListItemDate} key={date}>\n            {date}\n          </li>\n          <li className={s.incListItemCategory} key={category}>\n            {category}\n          </li>\n          <li className={s.incListItemPrice} key={amount}>\n            {amount}\n          </li>\n          <div className={s.incListItemBtnBox}>\n            <button\n              type=\"submit\"\n              className={s.incListItemBtn}\n              onClick={toggleModal}\n            >\n              <svg className={s.incListItemIcon}>\n                <use xlinkHref={`${sprite}#delete`} />\n              </svg>\n            </button>\n          </div>\n        </ul>\n      </li>\n      {showModal && (\n        <Modal onClose={toggleModal} onClick={onClick} text=\"Вы уверены?\" />\n      )}\n    </>\n  );\n};\n\nIncomesListItem.propTypes = {\n  description: PropTypes.string,\n  category: PropTypes.string,\n  amount: PropTypes.number,\n  date: PropTypes.string,\n  _id: PropTypes.string,\n};\n\nexport default IncomesListItem;\n","const getSelectedDate = state => state.date.date;\n\nconst dateSelectors = { getSelectedDate };\n\nexport default dateSelectors;\n"],"names":["inputStyle","btnStyle","balanceBoxStyle","dispatch","useDispatch","useState","value","setValue","balance","useSelector","authSelectors","inputValue","useRef","useEffect","authOperations","current","parseFloat","toFixed","className","s","style","onSubmit","e","preventDefault","newBalance","target","split","name","type","placeholder","autoComplete","defaultValue","briefList","Object","entries","filter","map","key","date","dateSelectors","xlinkHref","sprite","selected","Date","reverse","join","dateFormat","onChange","selectedDate","toISOString","slice","redirectTo","alt","tabletMediaQuery","useMediaQuery","to","isActive","id","incomesCategories","expenseCategories","mobileMediaQuery","activeLocation","useLocation","pathname","showCategory","setShowCategory","categoryItem","setCategoryItem","description","setDescription","amount","setAmount","handleShowCategory","handleChange","event","handleCategoryItem","innerText","resetForm","GoBackLink","Calendar","formRef","formData","FormData","formValues","forEach","submittedformData","Number","errorMessage","transactionOperations","autoFocus","required","onClick","categorie","expensesList","transactionSelectors","reverseExpenses","expense","isAddExpenseItem","isDeleteExpenseItem","TransitionGroup","component","CSSTransition","timeout","classNames","_id","incomesList","reverseIncomes","income","isAddIncomeItem","isDeleteIncomeItem","category","showModal","setShowModal","toggleModal","Modal","onClose","text","getSelectedDate","state"],"sourceRoot":""}