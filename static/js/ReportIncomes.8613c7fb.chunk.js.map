{"version":3,"file":"static/js/ReportIncomes.8613c7fb.chunk.js","mappings":"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","sources":["webpack://wallet-api-frontend/./src/common/elements/Chart/Chart.module.scss?5e51","common/elements/Chart/Chart.jsx","webpack://wallet-api-frontend/./src/components/ReportIncomes/ReportIncomes.module.scss?0f6f","components/ReportIncomes/ReportIncomes.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"Chart_visually-hidden__cDqrw\",\"container\":\"Chart_container__KFRD2\",\"chartBox\":\"Chart_chartBox__OCXrZ\"};","import PropTypes from 'prop-types';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport useMediaQuery from 'common/hooks/mediaRulesHook';\nimport s from './Chart.module.scss';\n\nChartJS.register(CategoryScale, LinearScale, BarElement);\n\nconst Chart = ({ chartData, transactionCategory, expenseValue, event }) => {\n  const mobileMediaQuery = useMediaQuery('(max-width: 767px)');\n\n  const chooseBgColor = arr => {\n    return arr.map((_, index) => (index % 3 === 0 ? '#FF751D' : '#FFDAC0'));\n  };\n\n  const chartArr = Object.entries(chartData);\n\n  const sortedData = [...chartArr].sort((a, b) =>\n    transactionCategory ? b[1] - a[1] : b[1].total - a[1].total\n  );\n\n  const transactionValue = sortedData.map(property =>\n    transactionCategory ? property[1].total : property[1]\n  );\n\n  const getTransactionData = (event, transactionValue) => {\n    return event ? expenseValue : transactionValue;\n  };\n\n  const transactionData = getTransactionData(event, transactionValue);\n\n  const labelsOfCategory = sortedData.map(property => property[0]);\n\n  const getLabels = (event, labelsOfCategory) => {\n    return event ? transactionCategory : labelsOfCategory;\n  };\n\n  const labels = getLabels(event, labelsOfCategory);\n\n  const getMaxValueFromData = dataArr => {\n    let maxValue = 0;\n    dataArr.forEach(value => {\n      if (maxValue < value) maxValue = value;\n    });\n    return maxValue;\n  };\n\n  const maxValueOfScaleY =\n    getMaxValueFromData(transactionData) +\n    getMaxValueFromData(transactionData) * 0.4;\n\n  const options = {\n    responsive: true,\n    aspectRatio: mobileMediaQuery ? 0.8 : 2,\n    plugins: {\n      datalabels: {\n        color: '#52555F',\n        align: mobileMediaQuery ? 'right' : 'top',\n        anchor: mobileMediaQuery ? 'start' : 'end',\n        padding: {\n          top: mobileMediaQuery ? -30 : 30,\n          right: 10,\n          bottom: 0,\n        },\n        formatter: function (value) {\n          return value + 'â‚¬';\n        },\n      },\n    },\n    indexAxis: mobileMediaQuery ? 'y' : 'x',\n\n    scales: {\n      x: {\n        grid: {\n          display: false,\n          drawBorder: false,\n        },\n        ticks: {\n          LayoutPosition: 'top',\n          display: !mobileMediaQuery,\n        },\n      },\n      y: {\n        max: maxValueOfScaleY,\n        grid: {\n          display: !mobileMediaQuery,\n          drawBorder: false,\n        },\n\n        ticks: {\n          LayoutPosition: 'top',\n          display: mobileMediaQuery,\n        },\n      },\n    },\n  };\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        data: transactionData,\n        maxBarThickness: mobileMediaQuery ? 20 : 30,\n        backgroundColor: chooseBgColor(labels),\n        borderRadius: 10,\n        inflateAmount: mobileMediaQuery ? 2 : 10,\n      },\n    ],\n  };\n\n  return (\n    <div className={s.chartBox}>\n      <Bar options={options} data={data} plugins={[ChartDataLabels]} />\n    </div>\n  );\n};\n\nChart.propTypes = {\n  chartData: PropTypes.object,\n  transactionCategory: PropTypes.array,\n  expenseValue: PropTypes.array,\n  event: PropTypes.object,\n};\n\nexport default Chart;\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"ReportIncomes_visually-hidden__0PvpP\",\"container\":\"ReportIncomes_container__bXdLb\",\"reportIncomesContainer\":\"ReportIncomes_reportIncomesContainer__ESplS\",\"reportIncomesBox\":\"ReportIncomes_reportIncomesBox__lhvy-\",\"reportIncomesList\":\"ReportIncomes_reportIncomesList__TRQNc\",\"reportIncomesItem\":\"ReportIncomes_reportIncomesItem__CCTu9\",\"reportIncomesCount\":\"ReportIncomes_reportIncomesCount__tH7uk\",\"reportIncomesIconBox\":\"ReportIncomes_reportIncomesIconBox__tN5m4\",\"reportIncomesIcon\":\"ReportIncomes_reportIncomesIcon__t3Ekp\",\"reportIncomesTitle\":\"ReportIncomes_reportIncomesTitle__a9FG4\"};","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport sprite from '../../images/svg/sprite.svg';\nimport useMediaQuery from 'common/hooks/mediaRulesHook';\nimport ReportNavTransaction from 'common/elements/ReportNavTransaction';\nimport { reportSelectors } from 'redux/report';\nimport Chart from 'common/elements/Chart';\nimport s from './ReportIncomes.module.scss';\n\nconst ReportIncomes = () => {\n  const tabletMediaQuery = useMediaQuery('(min-width: 768px)');\n  const [incomeCategory, setIncomeCategory] = useState([]);\n  const [incomeValue, setIncomeValue] = useState([]);\n  const [event, setEvent] = useState(null);\n\n  const incomesData = useSelector(reportSelectors.getIncomesData);\n\n  const onIncomeItem = (event, item) => {\n    event.preventDefault();\n    setEvent(event);\n    const labels = Object.entries(item[1])\n      .filter(([key, value]) => key !== 'total')\n      .map(([key, value]) => key);\n    const values = Object.entries(item[1])\n      .filter(([key, value]) => key !== 'total')\n      .map(([key, value]) => value);\n    setIncomeCategory(labels);\n    setIncomeValue(values);\n  };\n\n  return (\n    <>\n      <div className={s.reportIncomesContainer}>\n        {tabletMediaQuery && <ReportNavTransaction />}\n        <div className={s.reportIncomesBox}>\n          <ul className={s.reportIncomesList}>\n            {incomesData &&\n              Object.entries(incomesData).map(item => (\n                <li\n                  className={s.reportIncomesItem}\n                  key={item[0]}\n                  onClick={event => onIncomeItem(event, item)}\n                >\n                  <p className={s.reportIncomesCount}>{item[1].total}</p>\n                  <div className={s.reportIncomesIconBox}>\n                    <svg className={s.reportIncomesIcon}>\n                      <use xlinkHref={`${sprite}#${item[0]}`} />\n                    </svg>\n                  </div>\n                  <h2 className={s.reportIncomesTitle}>{item[0]}</h2>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n      <Chart\n        chartData={incomesData}\n        transactionCategory={incomeCategory}\n        expenseValue={incomeValue}\n        event={event}\n      />\n    </>\n  );\n};\n\nexport default ReportIncomes;\n"],"names":["ChartJS","CategoryScale","LinearScale","BarElement","arr","chartData","transactionCategory","expenseValue","event","mobileMediaQuery","useMediaQuery","chartArr","Object","entries","sortedData","sort","a","b","total","transactionData","transactionValue","getTransactionData","map","property","labels","labelsOfCategory","getLabels","getMaxValueFromData","dataArr","maxValue","forEach","value","options","responsive","aspectRatio","plugins","datalabels","color","align","anchor","padding","top","right","bottom","formatter","indexAxis","scales","x","grid","display","drawBorder","ticks","LayoutPosition","y","max","data","datasets","maxBarThickness","backgroundColor","_","index","borderRadius","inflateAmount","className","s","ChartDataLabels","tabletMediaQuery","useState","incomeCategory","setIncomeCategory","incomeValue","setIncomeValue","setEvent","incomesData","useSelector","reportSelectors","ReportNavTransaction","item","onClick","preventDefault","filter","key","values","onIncomeItem","xlinkHref","sprite","Chart"],"sourceRoot":""}