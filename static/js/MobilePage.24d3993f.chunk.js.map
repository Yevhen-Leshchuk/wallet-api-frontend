{"version":3,"file":"static/js/MobilePage.24d3993f.chunk.js","mappings":"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","sources":["webpack://wallet-api-frontend/./src/common/elements/Balance/Balance.module.scss?53d9","common/elements/Balance/Balance.jsx","webpack://wallet-api-frontend/./src/common/elements/Calendar/Calendar.module.scss?8fbd","common/elements/Calendar/Calendar.jsx","webpack://wallet-api-frontend/./src/common/elements/LinkToReport/LinkToReport.module.scss?af80","common/elements/LinkToReport/LinkToReport.jsx","webpack://wallet-api-frontend/./src/common/elements/NavTransaction/NavTransaction.module.scss?0381","common/elements/NavTransaction/NavTransaction.jsx","webpack://wallet-api-frontend/./src/common/elements/Tooltip/Tooltip.module.scss?a2ce","common/elements/Tooltip/Tooltip.jsx","webpack://wallet-api-frontend/./src/components/TransactionListItem/TransactionListItem.module.scss?5c93","components/TransactionListItem/ExpensesListItem.jsx","components/TransactionListItem/IncomesListItem.jsx","webpack://wallet-api-frontend/./src/pages/MobilePage/MobilePage.module.scss?cc14","pages/MobilePage/MobilePage.jsx","redux/date/date-selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"Balance_visually-hidden__r6JfX\",\"container\":\"Balance_container__UiCtf\",\"balanceBox\":\"Balance_balanceBox__1cVha\",\"balanceForm\":\"Balance_balanceForm__7SyeC\",\"balanceTitle\":\"Balance_balanceTitle__V+xg3\",\"balanceFormInput\":\"Balance_balanceFormInput__Kl4Qe\",\"balanceFormBtn\":\"Balance_balanceFormBtn__gY8X9\"};","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState, useRef } from 'react';\nimport { authSelectors, authOperations } from 'redux/auth';\nimport s from './Balance.module.scss';\n\nconst Balance = ({ inputStyle, btnStyle, balanceBoxStyle }) => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(null);\n  let balance = useSelector(authSelectors.getBalance);\n\n  const inputValue = useRef();\n\n  useEffect(() => {\n    dispatch(authOperations.getUser());\n\n    setValue(\n      (inputValue.current =\n        parseFloat(\n          balance && typeof balance === 'number' ? balance : 0\n        ).toFixed(2) + ' €')\n    );\n  }, [dispatch, balance, value]);\n\n  const setBalance = e => {\n    e.preventDefault();\n    const newBalance = e.target.balance.value.split(' ')[0];\n    dispatch(authOperations.updateUserBalance(newBalance));\n  };\n\n  return (\n    <div className={s.balanceBox} style={balanceBoxStyle}>\n      <h2 className={s.balanceTitle}>Баланс:</h2>\n      <form className={s.balanceForm} onSubmit={setBalance}>\n        <input\n          className={s.balanceFormInput}\n          style={inputStyle}\n          name=\"balance\"\n          type=\"text\"\n          placeholder=\"00.00 €\"\n          autoComplete=\"off\"\n          defaultValue={value}\n        />\n        <button className={s.balanceFormBtn} style={btnStyle} type=\"submit\">\n          Подтвердить\n        </button>\n      </form>\n    </div>\n  );\n};\n\nBalance.propTypes = {\n  inputStyle: PropTypes.object,\n  btnStyle: PropTypes.object,\n  balanceBoxStyle: PropTypes.object,\n};\n\nexport default Balance;\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"Calendar_visually-hidden__m+7gt\",\"container\":\"Calendar_container__PPxP3\",\"calendarBox\":\"Calendar_calendarBox__pgVLj\",\"calendarIconBox\":\"Calendar_calendarIconBox__MEiQm\",\"calendarIcon\":\"Calendar_calendarIcon__x9fBP\",\"datePicker\":\"Calendar_datePicker__wGnEc\"};","import { useSelector, useDispatch } from 'react-redux';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { dateSelectors } from 'redux/date';\nimport { selectedDate } from 'redux/date';\nimport sprite from '../../../images/svg/sprite.svg';\nimport s from './Calendar.module.scss';\n\nconst Calendar = () => {\n  const dispatch = useDispatch();\n\n  const date = useSelector(dateSelectors.getSelectedDate);\n\n  const handleChangeDate = date => {\n    dispatch(\n      selectedDate(\n        date.toISOString().slice(0, 10).split('.').reverse().join('-')\n      )\n    );\n  };\n\n  return (\n    <div className={s.calendarBox}>\n      <div className={s.calendarIconBox}>\n        <svg className={s.calendarIcon}>\n          <use xlinkHref={`${sprite}#calendar`} />\n        </svg>\n      </div>\n      <DatePicker\n        className={s.datePicker}\n        selected={\n          date ? new Date(date.split('.').reverse().join('-')) : new Date()\n        }\n        dateFormat=\"yyyy-MM-dd\"\n        onChange={handleChangeDate}\n      />\n    </div>\n  );\n};\n\nexport default Calendar;\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"LinkToReport_visually-hidden__F6fmj\",\"container\":\"LinkToReport_container__7LWff\",\"reportLinkBox\":\"LinkToReport_reportLinkBox__9o+S8\",\"reportLink\":\"LinkToReport_reportLink__0mhHV\",\"reportLinkIconBox\":\"LinkToReport_reportLinkIconBox__57nQ8\",\"reportLinkText\":\"LinkToReport_reportLinkText__nn4bq\",\"reportLinkIcon\":\"LinkToReport_reportLinkIcon__W65LD\"};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport sprite from '../../../images/svg/sprite.svg';\nimport s from './LinkToReport.module.scss';\n\nconst LinkToReport = ({ redirectTo = '/report/expenses' }) => {\n  return (\n    <div className={s.reportLinkBox}>\n      <Link to={redirectTo} alt=\"reportPage\" className={s.reportLink}>\n        <p className={s.reportLinkText}>Перейти к отчетам</p>\n        <div className={s.reportLinkIconBox}>\n          <svg className={s.reportLinkIcon}>\n            <use xlinkHref={`${sprite}#chart`} />\n          </svg>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nLinkToReport.propTypes = {\n  redirectTo: PropTypes.string,\n};\n\nexport default LinkToReport;\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"NavTransaction_visually-hidden__Utrnu\",\"container\":\"NavTransaction_container__stkl0\",\"navTransactionBox\":\"NavTransaction_navTransactionBox__ZqomF\",\"navTransactionLink\":\"NavTransaction_navTransactionLink__0Y+Uj\",\"activeLink\":\"NavTransaction_activeLink__F2UPc NavTransaction_navTransactionLink__0Y+Uj\",\"navTransactionLinkIncomes\":\"NavTransaction_navTransactionLinkIncomes__DzY6I NavTransaction_navTransactionLink__0Y+Uj\"};","import { NavLink } from 'react-router-dom';\nimport s from './NavTransaction.module.scss';\n\nconst NavTransaction = () => {\n  return (\n    <div className={s.navTransactionBox}>\n      <NavLink\n        to=\"/expenses\"\n        alt=\"expensesPage\"\n        className={({ isActive }) =>\n          isActive ? `${s.activeLink}` : `${s.navTransactionLink}`\n        }\n      >\n        Расход\n      </NavLink>\n\n      <NavLink\n        to=\"/incomes\"\n        alt=\"incomesPage\"\n        className={({ isActive }) =>\n          isActive ? `${s.activeLink}` : `${s.navTransactionLinkIncomes}`\n        }\n      >\n        Доход\n      </NavLink>\n    </div>\n  );\n};\n\nexport default NavTransaction;\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"Tooltip_visually-hidden__LaQJq\",\"container\":\"Tooltip_container__enwYb\",\"tooltipBox\":\"Tooltip_tooltipBox__hfzWn\",\"tooltipText\":\"Tooltip_tooltipText__MkdeG\",\"tooltipTextComment\":\"Tooltip_tooltipTextComment__8Wztc\"};","import PropTypes from 'prop-types';\nimport s from './Tooltip.module.scss';\n\nconst Tooltip = ({ style }) => {\n  return (\n    <div id=\"overlay\" className={s.tooltipBox} style={style}>\n      <p className={s.tooltipText}>\n        Привет! Для начала работы внеси текущий баланс своего счета!\n      </p>\n      <p className={s.tooltipTextComment}>\n        Ты не можешь тратить деньги пока их y тебя нет :)\n      </p>\n    </div>\n  );\n};\n\nTooltip.propTypes = {\n  style: PropTypes.object,\n};\n\nexport default Tooltip;\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"TransactionListItem_visually-hidden__ke3h0\",\"container\":\"TransactionListItem_container__cVZ8z\",\"expListItem\":\"TransactionListItem_expListItem__SZjwK\",\"incListItem\":\"TransactionListItem_incListItem__lZv7q\",\"expListItemBox\":\"TransactionListItem_expListItemBox__+S9ub\",\"incListItemBox\":\"TransactionListItem_incListItemBox__fOL6e\",\"expListItemDesc\":\"TransactionListItem_expListItemDesc__oB+o3\",\"incListItemDesc\":\"TransactionListItem_incListItemDesc__adm5s\",\"expListItemDate\":\"TransactionListItem_expListItemDate__WRZz2\",\"incListItemDate\":\"TransactionListItem_incListItemDate__hMkj9\",\"expListItemCategory\":\"TransactionListItem_expListItemCategory__+1hcY\",\"incListItemCategory\":\"TransactionListItem_incListItemCategory__R50Bt\",\"expListItemPrice\":\"TransactionListItem_expListItemPrice__MJZQE\",\"incListItemPrice\":\"TransactionListItem_incListItemPrice__ytckA TransactionListItem_expListItemPrice__MJZQE\",\"expListItemBtnBox\":\"TransactionListItem_expListItemBtnBox__P7AGO\",\"incListItemBtnBox\":\"TransactionListItem_incListItemBtnBox__Kioku\",\"expListItemBtn\":\"TransactionListItem_expListItemBtn__u3Zn1\",\"incListItemBtn\":\"TransactionListItem_incListItemBtn__8-vuT\",\"expListItemIcon\":\"TransactionListItem_expListItemIcon__P2Lgb\",\"incListItemIcon\":\"TransactionListItem_incListItemIcon__75ciQ\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { transactionOperations } from 'redux/transaction';\nimport Modal from 'common/elements/Modal';\nimport sprite from '../../images/svg/sprite.svg';\nimport s from './TransactionListItem.module.scss';\n\nconst ExpensesListItem = ({ description, category, amount, date, _id }) => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const onClick = () => {\n    dispatch(transactionOperations.deleteExpenseItem(_id));\n    dispatch(transactionOperations.getExpensesData());\n  };\n\n  return (\n    <>\n      <li className={s.expListItem} key={_id}>\n        <ul className={s.expListItemBox}>\n          <li className={s.expListItemDesc} key={description}>\n            {description}\n          </li>\n          <li className={s.expListItemDate} key={date}>\n            {date}\n          </li>\n          <li className={s.expListItemCategory} key={category}>\n            {category}\n          </li>\n          <li className={s.expListItemPrice} key={amount}>\n            {`- ${amount}`}\n          </li>\n          <div className={s.expListItemBtnBox}>\n            <button\n              type=\"submit\"\n              className={s.expListItemBtn}\n              onClick={toggleModal}\n            >\n              <svg className={s.expListItemIcon}>\n                <use xlinkHref={`${sprite}#delete`} />\n              </svg>\n            </button>\n          </div>\n        </ul>\n      </li>\n      {showModal && (\n        <Modal onClose={toggleModal} onClick={onClick} text=\"Вы уверены?\" />\n      )}\n    </>\n  );\n};\n\nExpensesListItem.propTypes = {\n  description: PropTypes.string,\n  category: PropTypes.string,\n  amount: PropTypes.number,\n  date: PropTypes.string,\n  _id: PropTypes.string,\n};\n\nexport default ExpensesListItem;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { transactionOperations } from 'redux/transaction';\nimport Modal from 'common/elements/Modal';\nimport sprite from '../../images/svg/sprite.svg';\nimport s from './TransactionListItem.module.scss';\n\nconst IncomesListItem = ({ description, category, amount, date, _id }) => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const onClick = () => {\n    dispatch(transactionOperations.deleteIncomeItem(_id));\n    dispatch(transactionOperations.getIncomesData());\n  };\n\n  return (\n    <>\n      <li className={s.incListItem} key={_id}>\n        <ul className={s.incListItemBox}>\n          <li className={s.incListItemDesc} key={description}>\n            {description}\n          </li>\n          <li className={s.incListItemDate} key={date}>\n            {date}\n          </li>\n          <li className={s.incListItemCategory} key={category}>\n            {category}\n          </li>\n          <li className={s.incListItemPrice} key={amount}>\n            {amount}\n          </li>\n          <div className={s.incListItemBtnBox}>\n            <button\n              type=\"submit\"\n              className={s.incListItemBtn}\n              onClick={toggleModal}\n            >\n              <svg className={s.incListItemIcon}>\n                <use xlinkHref={`${sprite}#delete`} />\n              </svg>\n            </button>\n          </div>\n        </ul>\n      </li>\n      {showModal && (\n        <Modal onClose={toggleModal} onClick={onClick} text=\"Вы уверены?\" />\n      )}\n    </>\n  );\n};\n\nIncomesListItem.propTypes = {\n  description: PropTypes.string,\n  category: PropTypes.string,\n  amount: PropTypes.number,\n  date: PropTypes.string,\n  _id: PropTypes.string,\n};\n\nexport default IncomesListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"MobilePage_visually-hidden__wrg8c\",\"container\":\"MobilePage_container__ny+F-\",\"mobileBox\":\"MobilePage_mobileBox__rFWvr\",\"expListItemBox\":\"MobilePage_expListItemBox__Hmpey\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { transactionOperations, transactionSelectors } from 'redux/transaction';\nimport LinkToReport from 'common/elements/LinkToReport';\nimport Balance from 'common/elements/Balance';\nimport Tooltip from 'common/elements/Tooltip';\nimport Calendar from 'common/elements/Calendar';\nimport NavTransaction from 'common/elements/NavTransaction';\nimport {\n  ExpensesListItem,\n  IncomesListItem,\n} from 'components/TransactionListItem';\nimport useMediaQuery from 'common/hooks/mediaRulesHook';\nimport { authSelectors } from 'redux/auth';\nimport s from './MobilePage.module.scss';\n\nconst MobilePage = () => {\n  let balance = useSelector(authSelectors.getBalance);\n  const mobileMediaQuery = useMediaQuery('(max-width: 767px)');\n  const incomesList = useSelector(transactionSelectors.getIncomesData);\n  const expensesList = useSelector(transactionSelectors.getExpensesData);\n  const dispatch = useDispatch();\n\n  const reverseIncomes = incomesList?.map(income => income).reverse();\n  const reverseExpenses = expensesList?.map(expense => expense).reverse();\n\n  useEffect(() => {\n    dispatch(transactionOperations.getIncomesData());\n    dispatch(transactionOperations.getExpensesData());\n  }, [dispatch]);\n\n  return (\n    <div className={s.mobileBox}>\n      <LinkToReport />\n      <Balance />\n      {!balance && <Tooltip />}\n      <Calendar />\n\n      {mobileMediaQuery && (\n        <ul className={s.expListItemBox}>\n          {reverseExpenses &&\n            reverseExpenses.map(expense => (\n              <ExpensesListItem key={expense._id} {...expense} />\n            ))}\n          {reverseIncomes &&\n            reverseIncomes.map(income => (\n              <IncomesListItem key={income._id} {...income} />\n            ))}\n        </ul>\n      )}\n      <NavTransaction />\n    </div>\n  );\n};\n\nexport default MobilePage;\n","const getSelectedDate = state => state.date.date;\n\nconst dateSelectors = { getSelectedDate };\n\nexport default dateSelectors;\n"],"names":["inputStyle","btnStyle","balanceBoxStyle","dispatch","useDispatch","useState","value","setValue","balance","useSelector","authSelectors","inputValue","useRef","useEffect","authOperations","current","parseFloat","toFixed","className","s","style","onSubmit","e","preventDefault","newBalance","target","split","name","type","placeholder","autoComplete","defaultValue","date","dateSelectors","xlinkHref","sprite","selected","Date","reverse","join","dateFormat","onChange","selectedDate","toISOString","slice","redirectTo","to","alt","isActive","id","description","category","amount","_id","showModal","setShowModal","toggleModal","onClick","Modal","onClose","transactionOperations","text","mobileMediaQuery","useMediaQuery","incomesList","transactionSelectors","expensesList","reverseIncomes","map","income","reverseExpenses","expense","LinkToReport","Balance","Tooltip","Calendar","NavTransaction","getSelectedDate","state"],"sourceRoot":""}